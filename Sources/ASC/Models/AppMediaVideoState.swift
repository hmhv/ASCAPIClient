//
// AppMediaVideoState.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct AppMediaVideoState: Sendable, Codable, JSONEncodable, Hashable {

    public enum State: String, Sendable, Codable, CaseIterable, CaseIterableDefaultsLast {
        case awaitingUpload = "AWAITING_UPLOAD"
        case uploadComplete = "UPLOAD_COMPLETE"
        case processing = "PROCESSING"
        case complete = "COMPLETE"
        case failed = "FAILED"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var errors: [AppMediaStateError]?
    public var warnings: [AppMediaStateError]?
    public var state: State?

    public init(errors: [AppMediaStateError]? = nil, warnings: [AppMediaStateError]? = nil, state: State? = nil) {
        self.errors = errors
        self.warnings = warnings
        self.state = state
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case errors
        case warnings
        case state
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(errors, forKey: .errors)
        try container.encodeIfPresent(warnings, forKey: .warnings)
        try container.encodeIfPresent(state, forKey: .state)
    }
}

