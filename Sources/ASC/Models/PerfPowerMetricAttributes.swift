//
// PerfPowerMetricAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PerfPowerMetricAttributes: Codable, JSONEncodable, Hashable {

    public enum Platform: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case ios = "IOS"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum MetricType: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case disk = "DISK"
        case hang = "HANG"
        case battery = "BATTERY"
        case launch = "LAUNCH"
        case memory = "MEMORY"
        case animation = "ANIMATION"
        case termination = "TERMINATION"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var platform: Platform?
    public var metricType: MetricType?
    public var deviceType: String?

    public init(platform: Platform? = nil, metricType: MetricType? = nil, deviceType: String? = nil) {
        self.platform = platform
        self.metricType = metricType
        self.deviceType = deviceType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case platform
        case metricType
        case deviceType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(platform, forKey: .platform)
        try container.encodeIfPresent(metricType, forKey: .metricType)
        try container.encodeIfPresent(deviceType, forKey: .deviceType)
    }
}

