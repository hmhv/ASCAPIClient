//
// AppCustomProductPageCreateRequestDataRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct AppCustomProductPageCreateRequestDataRelationships: Sendable, Codable, JSONEncodable, Hashable {

    public var app: AnalyticsReportRequestCreateRequestDataRelationshipsApp
    public var appCustomProductPageVersions: AppCustomProductPageCreateRequestDataRelationshipsAppCustomProductPageVersions?
    public var appStoreVersionTemplate: AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion?
    public var customProductPageTemplate: AppCustomProductPageVersionRelationshipsAppCustomProductPage?

    public init(app: AnalyticsReportRequestCreateRequestDataRelationshipsApp, appCustomProductPageVersions: AppCustomProductPageCreateRequestDataRelationshipsAppCustomProductPageVersions? = nil, appStoreVersionTemplate: AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion? = nil, customProductPageTemplate: AppCustomProductPageVersionRelationshipsAppCustomProductPage? = nil) {
        self.app = app
        self.appCustomProductPageVersions = appCustomProductPageVersions
        self.appStoreVersionTemplate = appStoreVersionTemplate
        self.customProductPageTemplate = customProductPageTemplate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case app
        case appCustomProductPageVersions
        case appStoreVersionTemplate
        case customProductPageTemplate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(app, forKey: .app)
        try container.encodeIfPresent(appCustomProductPageVersions, forKey: .appCustomProductPageVersions)
        try container.encodeIfPresent(appStoreVersionTemplate, forKey: .appStoreVersionTemplate)
        try container.encodeIfPresent(customProductPageTemplate, forKey: .customProductPageTemplate)
    }
}

