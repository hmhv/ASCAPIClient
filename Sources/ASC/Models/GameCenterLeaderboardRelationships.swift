//
// GameCenterLeaderboardRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GameCenterLeaderboardRelationships: Codable, JSONEncodable, Hashable {

    public var gameCenterDetail: AppRelationshipsGameCenterDetail?
    public var gameCenterGroup: GameCenterAchievementRelationshipsGameCenterGroup?
    public var groupLeaderboard: GameCenterDetailRelationshipsDefaultLeaderboard?
    public var gameCenterLeaderboardSets: GameCenterDetailRelationshipsGameCenterLeaderboardSets?
    public var localizations: GameCenterLeaderboardRelationshipsLocalizations?
    public var releases: GameCenterDetailRelationshipsLeaderboardReleases?

    public init(gameCenterDetail: AppRelationshipsGameCenterDetail? = nil, gameCenterGroup: GameCenterAchievementRelationshipsGameCenterGroup? = nil, groupLeaderboard: GameCenterDetailRelationshipsDefaultLeaderboard? = nil, gameCenterLeaderboardSets: GameCenterDetailRelationshipsGameCenterLeaderboardSets? = nil, localizations: GameCenterLeaderboardRelationshipsLocalizations? = nil, releases: GameCenterDetailRelationshipsLeaderboardReleases? = nil) {
        self.gameCenterDetail = gameCenterDetail
        self.gameCenterGroup = gameCenterGroup
        self.groupLeaderboard = groupLeaderboard
        self.gameCenterLeaderboardSets = gameCenterLeaderboardSets
        self.localizations = localizations
        self.releases = releases
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case gameCenterDetail
        case gameCenterGroup
        case groupLeaderboard
        case gameCenterLeaderboardSets
        case localizations
        case releases
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(gameCenterDetail, forKey: .gameCenterDetail)
        try container.encodeIfPresent(gameCenterGroup, forKey: .gameCenterGroup)
        try container.encodeIfPresent(groupLeaderboard, forKey: .groupLeaderboard)
        try container.encodeIfPresent(gameCenterLeaderboardSets, forKey: .gameCenterLeaderboardSets)
        try container.encodeIfPresent(localizations, forKey: .localizations)
        try container.encodeIfPresent(releases, forKey: .releases)
    }
}

