//
// CiScheduledStartCondition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CiScheduledStartCondition: Codable, JSONEncodable, Hashable {

    public var source: CiBranchPatterns?
    public var schedule: CiScheduledStartConditionSchedule?

    public init(source: CiBranchPatterns? = nil, schedule: CiScheduledStartConditionSchedule? = nil) {
        self.source = source
        self.schedule = schedule
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case source
        case schedule
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(schedule, forKey: .schedule)
    }
}

