//
// SubscriptionGracePeriodAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct SubscriptionGracePeriodAttributes: Sendable, Codable, JSONEncodable, Hashable {

    public enum RenewalType: String, Sendable, Codable, CaseIterable, CaseIterableDefaultsLast {
        case allRenewals = "ALL_RENEWALS"
        case paidToPaidOnly = "PAID_TO_PAID_ONLY"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var optIn: Bool?
    public var sandboxOptIn: Bool?
    public var duration: SubscriptionGracePeriodDuration?
    public var renewalType: RenewalType?

    public init(optIn: Bool? = nil, sandboxOptIn: Bool? = nil, duration: SubscriptionGracePeriodDuration? = nil, renewalType: RenewalType? = nil) {
        self.optIn = optIn
        self.sandboxOptIn = sandboxOptIn
        self.duration = duration
        self.renewalType = renewalType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case optIn
        case sandboxOptIn
        case duration
        case renewalType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(optIn, forKey: .optIn)
        try container.encodeIfPresent(sandboxOptIn, forKey: .sandboxOptIn)
        try container.encodeIfPresent(duration, forKey: .duration)
        try container.encodeIfPresent(renewalType, forKey: .renewalType)
    }
}

