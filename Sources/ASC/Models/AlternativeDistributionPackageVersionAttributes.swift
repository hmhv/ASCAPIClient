//
// AlternativeDistributionPackageVersionAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AlternativeDistributionPackageVersionAttributes: Codable, JSONEncodable, Hashable {

    public enum State: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case completed = "COMPLETED"
        case replaced = "REPLACED"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var url: String?
    public var urlExpirationDate: Date?
    public var version: String?
    public var fileChecksum: String?
    public var state: State?

    public init(url: String? = nil, urlExpirationDate: Date? = nil, version: String? = nil, fileChecksum: String? = nil, state: State? = nil) {
        self.url = url
        self.urlExpirationDate = urlExpirationDate
        self.version = version
        self.fileChecksum = fileChecksum
        self.state = state
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case urlExpirationDate
        case version
        case fileChecksum
        case state
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(urlExpirationDate, forKey: .urlExpirationDate)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(fileChecksum, forKey: .fileChecksum)
        try container.encodeIfPresent(state, forKey: .state)
    }
}

