//
// GameCenterMatchmakingRuleCreateRequestDataAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GameCenterMatchmakingRuleCreateRequestDataAttributes: Sendable, Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Sendable, Codable, CaseIterable, CaseIterableDefaultsLast {
        case compatible = "COMPATIBLE"
        case distance = "DISTANCE"
        case match = "MATCH"
        case team = "TEAM"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var referenceName: String
    public var description: String
    public var type: ModelType
    public var expression: String
    public var weight: Double?

    public init(referenceName: String, description: String, type: ModelType, expression: String, weight: Double? = nil) {
        self.referenceName = referenceName
        self.description = description
        self.type = type
        self.expression = expression
        self.weight = weight
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case referenceName
        case description
        case type
        case expression
        case weight
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(referenceName, forKey: .referenceName)
        try container.encode(description, forKey: .description)
        try container.encode(type, forKey: .type)
        try container.encode(expression, forKey: .expression)
        try container.encodeIfPresent(weight, forKey: .weight)
    }
}

