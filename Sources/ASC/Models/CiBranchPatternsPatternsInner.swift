//
// CiBranchPatternsPatternsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CiBranchPatternsPatternsInner: Codable, JSONEncodable, Hashable {

    public var pattern: String?
    public var isPrefix: Bool?

    public init(pattern: String? = nil, isPrefix: Bool? = nil) {
        self.pattern = pattern
        self.isPrefix = isPrefix
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pattern
        case isPrefix
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pattern, forKey: .pattern)
        try container.encodeIfPresent(isPrefix, forKey: .isPrefix)
    }
}

