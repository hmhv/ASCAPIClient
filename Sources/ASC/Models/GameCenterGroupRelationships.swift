//
// GameCenterGroupRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GameCenterGroupRelationships: Codable, JSONEncodable, Hashable {

    public var gameCenterDetails: GameCenterGroupRelationshipsGameCenterDetails?
    public var gameCenterLeaderboards: GameCenterDetailRelationshipsGameCenterLeaderboards?
    public var gameCenterLeaderboardSets: GameCenterDetailRelationshipsGameCenterLeaderboardSets?
    public var gameCenterAchievements: GameCenterDetailRelationshipsGameCenterAchievements?

    public init(gameCenterDetails: GameCenterGroupRelationshipsGameCenterDetails? = nil, gameCenterLeaderboards: GameCenterDetailRelationshipsGameCenterLeaderboards? = nil, gameCenterLeaderboardSets: GameCenterDetailRelationshipsGameCenterLeaderboardSets? = nil, gameCenterAchievements: GameCenterDetailRelationshipsGameCenterAchievements? = nil) {
        self.gameCenterDetails = gameCenterDetails
        self.gameCenterLeaderboards = gameCenterLeaderboards
        self.gameCenterLeaderboardSets = gameCenterLeaderboardSets
        self.gameCenterAchievements = gameCenterAchievements
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case gameCenterDetails
        case gameCenterLeaderboards
        case gameCenterLeaderboardSets
        case gameCenterAchievements
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(gameCenterDetails, forKey: .gameCenterDetails)
        try container.encodeIfPresent(gameCenterLeaderboards, forKey: .gameCenterLeaderboards)
        try container.encodeIfPresent(gameCenterLeaderboardSets, forKey: .gameCenterLeaderboardSets)
        try container.encodeIfPresent(gameCenterAchievements, forKey: .gameCenterAchievements)
    }
}

