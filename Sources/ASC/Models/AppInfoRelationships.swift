//
// AppInfoRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppInfoRelationships: Codable, JSONEncodable, Hashable {

    public var app: AppAvailabilityRelationshipsApp?
    public var ageRatingDeclaration: AppInfoRelationshipsAgeRatingDeclaration?
    public var appInfoLocalizations: AppInfoRelationshipsAppInfoLocalizations?
    public var primaryCategory: AppCategoryRelationshipsParent?
    public var primarySubcategoryOne: AppCategoryRelationshipsParent?
    public var primarySubcategoryTwo: AppCategoryRelationshipsParent?
    public var secondaryCategory: AppCategoryRelationshipsParent?
    public var secondarySubcategoryOne: AppCategoryRelationshipsParent?
    public var secondarySubcategoryTwo: AppCategoryRelationshipsParent?

    public init(app: AppAvailabilityRelationshipsApp? = nil, ageRatingDeclaration: AppInfoRelationshipsAgeRatingDeclaration? = nil, appInfoLocalizations: AppInfoRelationshipsAppInfoLocalizations? = nil, primaryCategory: AppCategoryRelationshipsParent? = nil, primarySubcategoryOne: AppCategoryRelationshipsParent? = nil, primarySubcategoryTwo: AppCategoryRelationshipsParent? = nil, secondaryCategory: AppCategoryRelationshipsParent? = nil, secondarySubcategoryOne: AppCategoryRelationshipsParent? = nil, secondarySubcategoryTwo: AppCategoryRelationshipsParent? = nil) {
        self.app = app
        self.ageRatingDeclaration = ageRatingDeclaration
        self.appInfoLocalizations = appInfoLocalizations
        self.primaryCategory = primaryCategory
        self.primarySubcategoryOne = primarySubcategoryOne
        self.primarySubcategoryTwo = primarySubcategoryTwo
        self.secondaryCategory = secondaryCategory
        self.secondarySubcategoryOne = secondarySubcategoryOne
        self.secondarySubcategoryTwo = secondarySubcategoryTwo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case app
        case ageRatingDeclaration
        case appInfoLocalizations
        case primaryCategory
        case primarySubcategoryOne
        case primarySubcategoryTwo
        case secondaryCategory
        case secondarySubcategoryOne
        case secondarySubcategoryTwo
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(app, forKey: .app)
        try container.encodeIfPresent(ageRatingDeclaration, forKey: .ageRatingDeclaration)
        try container.encodeIfPresent(appInfoLocalizations, forKey: .appInfoLocalizations)
        try container.encodeIfPresent(primaryCategory, forKey: .primaryCategory)
        try container.encodeIfPresent(primarySubcategoryOne, forKey: .primarySubcategoryOne)
        try container.encodeIfPresent(primarySubcategoryTwo, forKey: .primarySubcategoryTwo)
        try container.encodeIfPresent(secondaryCategory, forKey: .secondaryCategory)
        try container.encodeIfPresent(secondarySubcategoryOne, forKey: .secondarySubcategoryOne)
        try container.encodeIfPresent(secondarySubcategoryTwo, forKey: .secondarySubcategoryTwo)
    }
}

