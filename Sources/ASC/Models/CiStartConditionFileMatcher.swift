//
// CiStartConditionFileMatcher.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CiStartConditionFileMatcher: Codable, JSONEncodable, Hashable {

    public var directory: String?
    public var fileExtension: String?
    public var fileName: String?

    public init(directory: String? = nil, fileExtension: String? = nil, fileName: String? = nil) {
        self.directory = directory
        self.fileExtension = fileExtension
        self.fileName = fileName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case directory
        case fileExtension
        case fileName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(directory, forKey: .directory)
        try container.encodeIfPresent(fileExtension, forKey: .fileExtension)
        try container.encodeIfPresent(fileName, forKey: .fileName)
    }
}

