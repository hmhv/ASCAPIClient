//
// AppStoreVersionExperimentV2Relationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppStoreVersionExperimentV2Relationships: Codable, JSONEncodable, Hashable {

    public var app: AppAvailabilityRelationshipsApp?
    public var latestControlVersion: AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion?
    public var controlVersions: AppStoreVersionExperimentV2RelationshipsControlVersions?
    public var appStoreVersionExperimentTreatments: AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments?

    public init(app: AppAvailabilityRelationshipsApp? = nil, latestControlVersion: AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion? = nil, controlVersions: AppStoreVersionExperimentV2RelationshipsControlVersions? = nil, appStoreVersionExperimentTreatments: AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments? = nil) {
        self.app = app
        self.latestControlVersion = latestControlVersion
        self.controlVersions = controlVersions
        self.appStoreVersionExperimentTreatments = appStoreVersionExperimentTreatments
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case app
        case latestControlVersion
        case controlVersions
        case appStoreVersionExperimentTreatments
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(app, forKey: .app)
        try container.encodeIfPresent(latestControlVersion, forKey: .latestControlVersion)
        try container.encodeIfPresent(controlVersions, forKey: .controlVersions)
        try container.encodeIfPresent(appStoreVersionExperimentTreatments, forKey: .appStoreVersionExperimentTreatments)
    }
}

