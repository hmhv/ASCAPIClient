//
// GameCenterLeaderboardSetRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GameCenterLeaderboardSetRelationships: Sendable, Codable, JSONEncodable, Hashable {

    public var gameCenterDetail: GameCenterAchievementReleaseRelationshipsGameCenterDetail?
    public var gameCenterGroup: GameCenterAchievementRelationshipsGameCenterGroup?
    @available(*, deprecated, message: "This property is deprecated.")
    public var groupLeaderboardSet: GameCenterLeaderboardSetRelationshipsGroupLeaderboardSet?
    public var localizations: GameCenterLeaderboardSetRelationshipsLocalizations?
    public var gameCenterLeaderboards: GameCenterDetailRelationshipsGameCenterLeaderboards?
    public var releases: GameCenterDetailRelationshipsLeaderboardSetReleases?

    public init(gameCenterDetail: GameCenterAchievementReleaseRelationshipsGameCenterDetail? = nil, gameCenterGroup: GameCenterAchievementRelationshipsGameCenterGroup? = nil, groupLeaderboardSet: GameCenterLeaderboardSetRelationshipsGroupLeaderboardSet? = nil, localizations: GameCenterLeaderboardSetRelationshipsLocalizations? = nil, gameCenterLeaderboards: GameCenterDetailRelationshipsGameCenterLeaderboards? = nil, releases: GameCenterDetailRelationshipsLeaderboardSetReleases? = nil) {
        self.gameCenterDetail = gameCenterDetail
        self.gameCenterGroup = gameCenterGroup
        self.groupLeaderboardSet = groupLeaderboardSet
        self.localizations = localizations
        self.gameCenterLeaderboards = gameCenterLeaderboards
        self.releases = releases
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case gameCenterDetail
        case gameCenterGroup
        case groupLeaderboardSet
        case localizations
        case gameCenterLeaderboards
        case releases
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(gameCenterDetail, forKey: .gameCenterDetail)
        try container.encodeIfPresent(gameCenterGroup, forKey: .gameCenterGroup)
        try container.encodeIfPresent(groupLeaderboardSet, forKey: .groupLeaderboardSet)
        try container.encodeIfPresent(localizations, forKey: .localizations)
        try container.encodeIfPresent(gameCenterLeaderboards, forKey: .gameCenterLeaderboards)
        try container.encodeIfPresent(releases, forKey: .releases)
    }
}

