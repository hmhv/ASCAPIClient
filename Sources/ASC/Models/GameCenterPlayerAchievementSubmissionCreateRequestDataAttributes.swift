//
// GameCenterPlayerAchievementSubmissionCreateRequestDataAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GameCenterPlayerAchievementSubmissionCreateRequestDataAttributes: Codable, JSONEncodable, Hashable {

    public var bundleId: String
    public var challengeIds: [String]?
    public var percentageAchieved: Int
    public var scopedPlayerId: String
    public var submittedDate: Date?
    public var vendorIdentifier: String

    public init(bundleId: String, challengeIds: [String]? = nil, percentageAchieved: Int, scopedPlayerId: String, submittedDate: Date? = nil, vendorIdentifier: String) {
        self.bundleId = bundleId
        self.challengeIds = challengeIds
        self.percentageAchieved = percentageAchieved
        self.scopedPlayerId = scopedPlayerId
        self.submittedDate = submittedDate
        self.vendorIdentifier = vendorIdentifier
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bundleId
        case challengeIds
        case percentageAchieved
        case scopedPlayerId
        case submittedDate
        case vendorIdentifier
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bundleId, forKey: .bundleId)
        try container.encodeIfPresent(challengeIds, forKey: .challengeIds)
        try container.encode(percentageAchieved, forKey: .percentageAchieved)
        try container.encode(scopedPlayerId, forKey: .scopedPlayerId)
        try container.encodeIfPresent(submittedDate, forKey: .submittedDate)
        try container.encode(vendorIdentifier, forKey: .vendorIdentifier)
    }
}

