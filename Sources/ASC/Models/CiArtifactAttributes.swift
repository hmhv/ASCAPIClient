//
// CiArtifactAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CiArtifactAttributes: Codable, JSONEncodable, Hashable {

    public enum FileType: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case archive = "ARCHIVE"
        case archiveExport = "ARCHIVE_EXPORT"
        case logBundle = "LOG_BUNDLE"
        case resultBundle = "RESULT_BUNDLE"
        case testProducts = "TEST_PRODUCTS"
        case xcodebuildProducts = "XCODEBUILD_PRODUCTS"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var fileType: FileType?
    public var fileName: String?
    public var fileSize: Int?
    public var downloadUrl: String?

    public init(fileType: FileType? = nil, fileName: String? = nil, fileSize: Int? = nil, downloadUrl: String? = nil) {
        self.fileType = fileType
        self.fileName = fileName
        self.fileSize = fileSize
        self.downloadUrl = downloadUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fileType
        case fileName
        case fileSize
        case downloadUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fileType, forKey: .fileType)
        try container.encodeIfPresent(fileName, forKey: .fileName)
        try container.encodeIfPresent(fileSize, forKey: .fileSize)
        try container.encodeIfPresent(downloadUrl, forKey: .downloadUrl)
    }
}

