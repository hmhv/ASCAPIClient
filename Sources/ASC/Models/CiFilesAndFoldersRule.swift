//
// CiFilesAndFoldersRule.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CiFilesAndFoldersRule: Sendable, Codable, JSONEncodable, Hashable {

    public enum Mode: String, Sendable, Codable, CaseIterable, CaseIterableDefaultsLast {
        case startIfAnyFileMatches = "START_IF_ANY_FILE_MATCHES"
        case doNotStartIfAllFilesMatch = "DO_NOT_START_IF_ALL_FILES_MATCH"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var mode: Mode?
    public var matchers: [CiStartConditionFileMatcher]?

    public init(mode: Mode? = nil, matchers: [CiStartConditionFileMatcher]? = nil) {
        self.mode = mode
        self.matchers = matchers
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mode
        case matchers
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(mode, forKey: .mode)
        try container.encodeIfPresent(matchers, forKey: .matchers)
    }
}

