//
// ActorAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ActorAttributes: Sendable, Codable, JSONEncodable, Hashable {

    public enum ActorType: String, Sendable, Codable, CaseIterable, CaseIterableDefaultsLast {
        case user = "USER"
        case apiKey = "API_KEY"
        case xcodeCloud = "XCODE_CLOUD"
        case apple = "APPLE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var actorType: ActorType?
    public var userFirstName: String?
    public var userLastName: String?
    public var userEmail: String?
    public var apiKeyId: String?

    public init(actorType: ActorType? = nil, userFirstName: String? = nil, userLastName: String? = nil, userEmail: String? = nil, apiKeyId: String? = nil) {
        self.actorType = actorType
        self.userFirstName = userFirstName
        self.userLastName = userLastName
        self.userEmail = userEmail
        self.apiKeyId = apiKeyId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case actorType
        case userFirstName
        case userLastName
        case userEmail
        case apiKeyId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(actorType, forKey: .actorType)
        try container.encodeIfPresent(userFirstName, forKey: .userFirstName)
        try container.encodeIfPresent(userLastName, forKey: .userLastName)
        try container.encodeIfPresent(userEmail, forKey: .userEmail)
        try container.encodeIfPresent(apiKeyId, forKey: .apiKeyId)
    }
}

