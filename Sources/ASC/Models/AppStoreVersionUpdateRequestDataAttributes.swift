//
// AppStoreVersionUpdateRequestDataAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppStoreVersionUpdateRequestDataAttributes: Codable, JSONEncodable, Hashable {

    public enum ReleaseType: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case manual = "MANUAL"
        case afterApproval = "AFTER_APPROVAL"
        case scheduled = "SCHEDULED"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var versionString: String?
    public var copyright: String?
    public var releaseType: ReleaseType?
    public var earliestReleaseDate: Date?
    public var downloadable: Bool?

    public init(versionString: String? = nil, copyright: String? = nil, releaseType: ReleaseType? = nil, earliestReleaseDate: Date? = nil, downloadable: Bool? = nil) {
        self.versionString = versionString
        self.copyright = copyright
        self.releaseType = releaseType
        self.earliestReleaseDate = earliestReleaseDate
        self.downloadable = downloadable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case versionString
        case copyright
        case releaseType
        case earliestReleaseDate
        case downloadable
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(versionString, forKey: .versionString)
        try container.encodeIfPresent(copyright, forKey: .copyright)
        try container.encodeIfPresent(releaseType, forKey: .releaseType)
        try container.encodeIfPresent(earliestReleaseDate, forKey: .earliestReleaseDate)
        try container.encodeIfPresent(downloadable, forKey: .downloadable)
    }
}

