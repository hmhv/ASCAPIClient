//
// InAppPurchaseV2Attributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct InAppPurchaseV2Attributes: Codable, JSONEncodable, Hashable {

    public var name: String?
    public var productId: String?
    public var inAppPurchaseType: InAppPurchaseType?
    public var state: InAppPurchaseState?
    public var reviewNote: String?
    public var familySharable: Bool?
    public var contentHosting: Bool?

    public init(name: String? = nil, productId: String? = nil, inAppPurchaseType: InAppPurchaseType? = nil, state: InAppPurchaseState? = nil, reviewNote: String? = nil, familySharable: Bool? = nil, contentHosting: Bool? = nil) {
        self.name = name
        self.productId = productId
        self.inAppPurchaseType = inAppPurchaseType
        self.state = state
        self.reviewNote = reviewNote
        self.familySharable = familySharable
        self.contentHosting = contentHosting
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case productId
        case inAppPurchaseType
        case state
        case reviewNote
        case familySharable
        case contentHosting
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(productId, forKey: .productId)
        try container.encodeIfPresent(inAppPurchaseType, forKey: .inAppPurchaseType)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(reviewNote, forKey: .reviewNote)
        try container.encodeIfPresent(familySharable, forKey: .familySharable)
        try container.encodeIfPresent(contentHosting, forKey: .contentHosting)
    }
}

