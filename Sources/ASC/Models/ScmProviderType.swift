//
// ScmProviderType.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ScmProviderType: Sendable, Codable, JSONEncodable, Hashable {

    public enum Kind: String, Sendable, Codable, CaseIterable, CaseIterableDefaultsLast {
        case bitbucketCloud = "BITBUCKET_CLOUD"
        case bitbucketServer = "BITBUCKET_SERVER"
        case githubCloud = "GITHUB_CLOUD"
        case githubEnterprise = "GITHUB_ENTERPRISE"
        case gitlabCloud = "GITLAB_CLOUD"
        case gitlabSelfManaged = "GITLAB_SELF_MANAGED"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var kind: Kind?
    public var displayName: String?
    public var isOnPremise: Bool?

    public init(kind: Kind? = nil, displayName: String? = nil, isOnPremise: Bool? = nil) {
        self.kind = kind
        self.displayName = displayName
        self.isOnPremise = isOnPremise
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case kind
        case displayName
        case isOnPremise
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(kind, forKey: .kind)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(isOnPremise, forKey: .isOnPremise)
    }
}

