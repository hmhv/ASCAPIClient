//
// AgeRatingDeclarationAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AgeRatingDeclarationAttributes: Codable, JSONEncodable, Hashable {

    public enum AlcoholTobaccoOrDrugUseOrReferences: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum Contests: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum GamblingSimulated: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum MedicalOrTreatmentInformation: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum ProfanityOrCrudeHumor: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum SexualContentGraphicAndNudity: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum SexualContentOrNudity: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum AgeRatingOverride: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case seventeenPlus = "SEVENTEEN_PLUS"
        case unrated = "UNRATED"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum HorrorOrFearThemes: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum MatureOrSuggestiveThemes: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum ViolenceCartoonOrFantasy: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum ViolenceRealisticProlongedGraphicOrSadistic: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public enum ViolenceRealistic: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case _none = "NONE"
        case infrequentOrMild = "INFREQUENT_OR_MILD"
        case frequentOrIntense = "FREQUENT_OR_INTENSE"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var alcoholTobaccoOrDrugUseOrReferences: AlcoholTobaccoOrDrugUseOrReferences?
    public var contests: Contests?
    @available(*, deprecated, message: "This property is deprecated.")
    public var gamblingAndContests: Bool?
    public var gambling: Bool?
    public var gamblingSimulated: GamblingSimulated?
    public var kidsAgeBand: KidsAgeBand?
    public var medicalOrTreatmentInformation: MedicalOrTreatmentInformation?
    public var profanityOrCrudeHumor: ProfanityOrCrudeHumor?
    public var sexualContentGraphicAndNudity: SexualContentGraphicAndNudity?
    public var sexualContentOrNudity: SexualContentOrNudity?
    @available(*, deprecated, message: "This property is deprecated.")
    public var seventeenPlus: Bool?
    public var ageRatingOverride: AgeRatingOverride?
    public var horrorOrFearThemes: HorrorOrFearThemes?
    public var matureOrSuggestiveThemes: MatureOrSuggestiveThemes?
    public var unrestrictedWebAccess: Bool?
    public var violenceCartoonOrFantasy: ViolenceCartoonOrFantasy?
    public var violenceRealisticProlongedGraphicOrSadistic: ViolenceRealisticProlongedGraphicOrSadistic?
    public var violenceRealistic: ViolenceRealistic?

    public init(alcoholTobaccoOrDrugUseOrReferences: AlcoholTobaccoOrDrugUseOrReferences? = nil, contests: Contests? = nil, gamblingAndContests: Bool? = nil, gambling: Bool? = nil, gamblingSimulated: GamblingSimulated? = nil, kidsAgeBand: KidsAgeBand? = nil, medicalOrTreatmentInformation: MedicalOrTreatmentInformation? = nil, profanityOrCrudeHumor: ProfanityOrCrudeHumor? = nil, sexualContentGraphicAndNudity: SexualContentGraphicAndNudity? = nil, sexualContentOrNudity: SexualContentOrNudity? = nil, seventeenPlus: Bool? = nil, ageRatingOverride: AgeRatingOverride? = nil, horrorOrFearThemes: HorrorOrFearThemes? = nil, matureOrSuggestiveThemes: MatureOrSuggestiveThemes? = nil, unrestrictedWebAccess: Bool? = nil, violenceCartoonOrFantasy: ViolenceCartoonOrFantasy? = nil, violenceRealisticProlongedGraphicOrSadistic: ViolenceRealisticProlongedGraphicOrSadistic? = nil, violenceRealistic: ViolenceRealistic? = nil) {
        self.alcoholTobaccoOrDrugUseOrReferences = alcoholTobaccoOrDrugUseOrReferences
        self.contests = contests
        self.gamblingAndContests = gamblingAndContests
        self.gambling = gambling
        self.gamblingSimulated = gamblingSimulated
        self.kidsAgeBand = kidsAgeBand
        self.medicalOrTreatmentInformation = medicalOrTreatmentInformation
        self.profanityOrCrudeHumor = profanityOrCrudeHumor
        self.sexualContentGraphicAndNudity = sexualContentGraphicAndNudity
        self.sexualContentOrNudity = sexualContentOrNudity
        self.seventeenPlus = seventeenPlus
        self.ageRatingOverride = ageRatingOverride
        self.horrorOrFearThemes = horrorOrFearThemes
        self.matureOrSuggestiveThemes = matureOrSuggestiveThemes
        self.unrestrictedWebAccess = unrestrictedWebAccess
        self.violenceCartoonOrFantasy = violenceCartoonOrFantasy
        self.violenceRealisticProlongedGraphicOrSadistic = violenceRealisticProlongedGraphicOrSadistic
        self.violenceRealistic = violenceRealistic
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case alcoholTobaccoOrDrugUseOrReferences
        case contests
        case gamblingAndContests
        case gambling
        case gamblingSimulated
        case kidsAgeBand
        case medicalOrTreatmentInformation
        case profanityOrCrudeHumor
        case sexualContentGraphicAndNudity
        case sexualContentOrNudity
        case seventeenPlus
        case ageRatingOverride
        case horrorOrFearThemes
        case matureOrSuggestiveThemes
        case unrestrictedWebAccess
        case violenceCartoonOrFantasy
        case violenceRealisticProlongedGraphicOrSadistic
        case violenceRealistic
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(alcoholTobaccoOrDrugUseOrReferences, forKey: .alcoholTobaccoOrDrugUseOrReferences)
        try container.encodeIfPresent(contests, forKey: .contests)
        try container.encodeIfPresent(gamblingAndContests, forKey: .gamblingAndContests)
        try container.encodeIfPresent(gambling, forKey: .gambling)
        try container.encodeIfPresent(gamblingSimulated, forKey: .gamblingSimulated)
        try container.encodeIfPresent(kidsAgeBand, forKey: .kidsAgeBand)
        try container.encodeIfPresent(medicalOrTreatmentInformation, forKey: .medicalOrTreatmentInformation)
        try container.encodeIfPresent(profanityOrCrudeHumor, forKey: .profanityOrCrudeHumor)
        try container.encodeIfPresent(sexualContentGraphicAndNudity, forKey: .sexualContentGraphicAndNudity)
        try container.encodeIfPresent(sexualContentOrNudity, forKey: .sexualContentOrNudity)
        try container.encodeIfPresent(seventeenPlus, forKey: .seventeenPlus)
        try container.encodeIfPresent(ageRatingOverride, forKey: .ageRatingOverride)
        try container.encodeIfPresent(horrorOrFearThemes, forKey: .horrorOrFearThemes)
        try container.encodeIfPresent(matureOrSuggestiveThemes, forKey: .matureOrSuggestiveThemes)
        try container.encodeIfPresent(unrestrictedWebAccess, forKey: .unrestrictedWebAccess)
        try container.encodeIfPresent(violenceCartoonOrFantasy, forKey: .violenceCartoonOrFantasy)
        try container.encodeIfPresent(violenceRealisticProlongedGraphicOrSadistic, forKey: .violenceRealisticProlongedGraphicOrSadistic)
        try container.encodeIfPresent(violenceRealistic, forKey: .violenceRealistic)
    }
}

