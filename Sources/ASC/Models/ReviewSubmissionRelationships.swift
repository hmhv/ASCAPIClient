//
// ReviewSubmissionRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReviewSubmissionRelationships: Codable, JSONEncodable, Hashable {

    public var app: AppAvailabilityRelationshipsApp?
    public var items: ReviewSubmissionRelationshipsItems?
    public var appStoreVersionForReview: AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion?
    public var submittedByActor: ReviewSubmissionRelationshipsSubmittedByActor?
    public var lastUpdatedByActor: ReviewSubmissionRelationshipsSubmittedByActor?

    public init(app: AppAvailabilityRelationshipsApp? = nil, items: ReviewSubmissionRelationshipsItems? = nil, appStoreVersionForReview: AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion? = nil, submittedByActor: ReviewSubmissionRelationshipsSubmittedByActor? = nil, lastUpdatedByActor: ReviewSubmissionRelationshipsSubmittedByActor? = nil) {
        self.app = app
        self.items = items
        self.appStoreVersionForReview = appStoreVersionForReview
        self.submittedByActor = submittedByActor
        self.lastUpdatedByActor = lastUpdatedByActor
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case app
        case items
        case appStoreVersionForReview
        case submittedByActor
        case lastUpdatedByActor
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(app, forKey: .app)
        try container.encodeIfPresent(items, forKey: .items)
        try container.encodeIfPresent(appStoreVersionForReview, forKey: .appStoreVersionForReview)
        try container.encodeIfPresent(submittedByActor, forKey: .submittedByActor)
        try container.encodeIfPresent(lastUpdatedByActor, forKey: .lastUpdatedByActor)
    }
}

