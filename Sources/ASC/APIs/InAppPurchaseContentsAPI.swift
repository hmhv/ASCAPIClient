//
// InAppPurchaseContentsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class InAppPurchaseContentsAPI {

    /**
     * enum for parameter fieldsInAppPurchaseContents
     */
    public enum FieldsInAppPurchaseContents_inAppPurchaseContentsGetInstance: String, CaseIterable {
        case filename = "fileName"
        case filesize = "fileSize"
        case url = "url"
        case lastmodifieddate = "lastModifiedDate"
        case inapppurchasev2 = "inAppPurchaseV2"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchaseContentsGetInstance: String, CaseIterable {
        case inapppurchasev2 = "inAppPurchaseV2"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseContents: (query) the fields to include for returned resources of type inAppPurchaseContents (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - returns: InAppPurchaseContentResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func inAppPurchaseContentsGetInstance(id: String, fieldsInAppPurchaseContents: [FieldsInAppPurchaseContents_inAppPurchaseContentsGetInstance]? = nil, include: [Include_inAppPurchaseContentsGetInstance]? = nil) async throws -> InAppPurchaseContentResponse {
        return try await inAppPurchaseContentsGetInstanceWithRequestBuilder(id: id, fieldsInAppPurchaseContents: fieldsInAppPurchaseContents, include: include).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: InAppPurchaseContentResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func inAppPurchaseContentsGetInstance(urlString: String) async throws -> InAppPurchaseContentResponse {
        return try await inAppPurchaseContentsGetInstanceWithRequestBuilder(urlString: urlString).execute().body
    }

    /**
     - GET /v1/inAppPurchaseContents/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseContents: (query) the fields to include for returned resources of type inAppPurchaseContents (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - returns: RequestBuilder<InAppPurchaseContentResponse> 
     */
    open class func inAppPurchaseContentsGetInstanceWithRequestBuilder(id: String, fieldsInAppPurchaseContents: [FieldsInAppPurchaseContents_inAppPurchaseContentsGetInstance]? = nil, include: [Include_inAppPurchaseContentsGetInstance]? = nil) -> RequestBuilder<InAppPurchaseContentResponse> {
        var localVariablePath = "/v1/inAppPurchaseContents/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[inAppPurchaseContents]": (wrappedValue: fieldsInAppPurchaseContents?.encodeToJSON(), isExplode: false),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InAppPurchaseContentResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     - GET /v1/inAppPurchaseContents/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<InAppPurchaseContentResponse> 
     */
    open class func inAppPurchaseContentsGetInstanceWithRequestBuilder(urlString: String) -> RequestBuilder<InAppPurchaseContentResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InAppPurchaseContentResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
