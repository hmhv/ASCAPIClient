//
// InAppPurchaseSubmissionsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class InAppPurchaseSubmissionsAPI {

    /**

     - parameter inAppPurchaseSubmissionCreateRequest: (body) InAppPurchaseSubmission representation 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: InAppPurchaseSubmissionResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func inAppPurchaseSubmissionsCreateInstance(inAppPurchaseSubmissionCreateRequest: InAppPurchaseSubmissionCreateRequest, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) async throws(ErrorResponse) -> InAppPurchaseSubmissionResponse {
        return try await inAppPurchaseSubmissionsCreateInstanceWithRequestBuilder(inAppPurchaseSubmissionCreateRequest: inAppPurchaseSubmissionCreateRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - parameter apiConfiguration: The configuration for the http request.
     - returns: InAppPurchaseSubmissionResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func inAppPurchaseSubmissionsCreateInstance(urlString: String, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) async throws(ErrorResponse) -> InAppPurchaseSubmissionResponse {
        return try await inAppPurchaseSubmissionsCreateInstanceWithRequestBuilder(urlString: urlString, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - POST /v1/inAppPurchaseSubmissions
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter inAppPurchaseSubmissionCreateRequest: (body) InAppPurchaseSubmission representation 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<InAppPurchaseSubmissionResponse> 
     */
    open class func inAppPurchaseSubmissionsCreateInstanceWithRequestBuilder(inAppPurchaseSubmissionCreateRequest: InAppPurchaseSubmissionCreateRequest, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) -> RequestBuilder<InAppPurchaseSubmissionResponse> {
        let localVariablePath = "/v1/inAppPurchaseSubmissions"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inAppPurchaseSubmissionCreateRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InAppPurchaseSubmissionResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     - POST /v1/inAppPurchaseSubmissions
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<InAppPurchaseSubmissionResponse> 
     */
    open class func inAppPurchaseSubmissionsCreateInstanceWithRequestBuilder(urlString: String, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) -> RequestBuilder<InAppPurchaseSubmissionResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InAppPurchaseSubmissionResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
