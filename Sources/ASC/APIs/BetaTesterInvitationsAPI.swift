//
// BetaTesterInvitationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BetaTesterInvitationsAPI {

    /**

     - parameter betaTesterInvitationCreateRequest: (body) BetaTesterInvitation representation 
     - returns: BetaTesterInvitationResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func betaTesterInvitationsCreateInstance(betaTesterInvitationCreateRequest: BetaTesterInvitationCreateRequest) async throws -> BetaTesterInvitationResponse {
        var requestTask: RequestTask?
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                  continuation.resume(throwing: CancellationError())
                  return
                }

                requestTask = betaTesterInvitationsCreateInstanceWithRequestBuilder(betaTesterInvitationCreateRequest: betaTesterInvitationCreateRequest).execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: { [requestTask] in
            requestTask?.cancel()
        }
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: BetaTesterInvitationResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func betaTesterInvitationsCreateInstance(urlString: String) async throws -> BetaTesterInvitationResponse {
        var requestTask: RequestTask?
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                  continuation.resume(throwing: CancellationError())
                  return
                }

                requestTask = betaTesterInvitationsCreateInstanceWithRequestBuilder(urlString: urlString).execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: { [requestTask] in
            requestTask?.cancel()
        }
    }

    /**
     - POST /v1/betaTesterInvitations
     - BASIC:
       - type: http
       - name: itc-bearer-token
     - parameter betaTesterInvitationCreateRequest: (body) BetaTesterInvitation representation 
     - returns: RequestBuilder<BetaTesterInvitationResponse> 
     */
    open class func betaTesterInvitationsCreateInstanceWithRequestBuilder(betaTesterInvitationCreateRequest: BetaTesterInvitationCreateRequest) -> RequestBuilder<BetaTesterInvitationResponse> {
        let localVariablePath = "/v1/betaTesterInvitations"
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: betaTesterInvitationCreateRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BetaTesterInvitationResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     - POST /v1/betaTesterInvitations
     - BASIC:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<BetaTesterInvitationResponse> 
     */
    open class func betaTesterInvitationsCreateInstanceWithRequestBuilder(urlString: String) -> RequestBuilder<BetaTesterInvitationResponse> {
        let localVariableRequestBuilder: RequestBuilder<BetaTesterInvitationResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()
        return localVariableRequestBuilder.init(method: "POST", URLString: urlString, parameters: nil)
    }
}
