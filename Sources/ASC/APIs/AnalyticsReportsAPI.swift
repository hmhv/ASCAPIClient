//
// AnalyticsReportsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class AnalyticsReportsAPI {

    /**
     * enum for parameter fieldsAnalyticsReports
     */
    public enum FieldsAnalyticsReports_analyticsReportsGetInstance: String, Sendable, CaseIterable {
        case name = "name"
        case category = "category"
        case instances = "instances"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAnalyticsReports: (query) the fields to include for returned resources of type analyticsReports (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: AnalyticsReportResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func analyticsReportsGetInstance(id: String, fieldsAnalyticsReports: [FieldsAnalyticsReports_analyticsReportsGetInstance]? = nil, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) async throws(ErrorResponse) -> AnalyticsReportResponse {
        return try await analyticsReportsGetInstanceWithRequestBuilder(id: id, fieldsAnalyticsReports: fieldsAnalyticsReports, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - parameter apiConfiguration: The configuration for the http request.
     - returns: AnalyticsReportResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func analyticsReportsGetInstance(urlString: String, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) async throws(ErrorResponse) -> AnalyticsReportResponse {
        return try await analyticsReportsGetInstanceWithRequestBuilder(urlString: urlString, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /v1/analyticsReports/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAnalyticsReports: (query) the fields to include for returned resources of type analyticsReports (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<AnalyticsReportResponse> 
     */
    open class func analyticsReportsGetInstanceWithRequestBuilder(id: String, fieldsAnalyticsReports: [FieldsAnalyticsReports_analyticsReportsGetInstance]? = nil, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) -> RequestBuilder<AnalyticsReportResponse> {
        var localVariablePath = "/v1/analyticsReports/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[analyticsReports]": (wrappedValue: fieldsAnalyticsReports?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnalyticsReportResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     - GET /v1/analyticsReports/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<AnalyticsReportResponse> 
     */
    open class func analyticsReportsGetInstanceWithRequestBuilder(urlString: String, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) -> RequestBuilder<AnalyticsReportResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnalyticsReportResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     * enum for parameter filterGranularity
     */
    public enum FilterGranularity_analyticsReportsInstancesGetToManyRelated: String, Sendable, CaseIterable {
        case daily = "DAILY"
        case weekly = "WEEKLY"
        case monthly = "MONTHLY"
    }

    /**
     * enum for parameter fieldsAnalyticsReportInstances
     */
    public enum FieldsAnalyticsReportInstances_analyticsReportsInstancesGetToManyRelated: String, Sendable, CaseIterable {
        case granularity = "granularity"
        case processingdate = "processingDate"
        case segments = "segments"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter filterGranularity: (query) filter by attribute &#39;granularity&#39; (optional)
     - parameter filterProcessingDate: (query) filter by attribute &#39;processingDate&#39; (optional)
     - parameter fieldsAnalyticsReportInstances: (query) the fields to include for returned resources of type analyticsReportInstances (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: AnalyticsReportInstancesResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func analyticsReportsInstancesGetToManyRelated(id: String, filterGranularity: [FilterGranularity_analyticsReportsInstancesGetToManyRelated]? = nil, filterProcessingDate: [String]? = nil, fieldsAnalyticsReportInstances: [FieldsAnalyticsReportInstances_analyticsReportsInstancesGetToManyRelated]? = nil, limit: Int? = nil, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) async throws(ErrorResponse) -> AnalyticsReportInstancesResponse {
        return try await analyticsReportsInstancesGetToManyRelatedWithRequestBuilder(id: id, filterGranularity: filterGranularity, filterProcessingDate: filterProcessingDate, fieldsAnalyticsReportInstances: fieldsAnalyticsReportInstances, limit: limit, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - parameter apiConfiguration: The configuration for the http request.
     - returns: AnalyticsReportInstancesResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func analyticsReportsInstancesGetToManyRelated(urlString: String, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) async throws(ErrorResponse) -> AnalyticsReportInstancesResponse {
        return try await analyticsReportsInstancesGetToManyRelatedWithRequestBuilder(urlString: urlString, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /v1/analyticsReports/{id}/instances
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter filterGranularity: (query) filter by attribute &#39;granularity&#39; (optional)
     - parameter filterProcessingDate: (query) filter by attribute &#39;processingDate&#39; (optional)
     - parameter fieldsAnalyticsReportInstances: (query) the fields to include for returned resources of type analyticsReportInstances (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<AnalyticsReportInstancesResponse> 
     */
    open class func analyticsReportsInstancesGetToManyRelatedWithRequestBuilder(id: String, filterGranularity: [FilterGranularity_analyticsReportsInstancesGetToManyRelated]? = nil, filterProcessingDate: [String]? = nil, fieldsAnalyticsReportInstances: [FieldsAnalyticsReportInstances_analyticsReportsInstancesGetToManyRelated]? = nil, limit: Int? = nil, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) -> RequestBuilder<AnalyticsReportInstancesResponse> {
        var localVariablePath = "/v1/analyticsReports/{id}/instances"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter[granularity]": (wrappedValue: filterGranularity?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: false),
            "filter[processingDate]": (wrappedValue: filterProcessingDate?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: false),
            "fields[analyticsReportInstances]": (wrappedValue: fieldsAnalyticsReportInstances?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnalyticsReportInstancesResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     - GET /v1/analyticsReports/{id}/instances
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<AnalyticsReportInstancesResponse> 
     */
    open class func analyticsReportsInstancesGetToManyRelatedWithRequestBuilder(urlString: String, apiConfiguration: ASCAPIConfiguration = ASCAPIConfiguration.shared) -> RequestBuilder<AnalyticsReportInstancesResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnalyticsReportInstancesResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
