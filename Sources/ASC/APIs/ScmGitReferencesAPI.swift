//
// ScmGitReferencesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ScmGitReferencesAPI {

    /**
     * enum for parameter fieldsScmGitReferences
     */
    public enum FieldsScmGitReferences_scmGitReferencesGetInstance: String, CaseIterable {
        case canonicalname = "canonicalName"
        case isdeleted = "isDeleted"
        case kind = "kind"
        case name = "name"
        case repository = "repository"
    }

    /**
     * enum for parameter include
     */
    public enum Include_scmGitReferencesGetInstance: String, CaseIterable {
        case repository = "repository"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsScmGitReferences: (query) the fields to include for returned resources of type scmGitReferences (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - returns: ScmGitReferenceResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func scmGitReferencesGetInstance(id: String, fieldsScmGitReferences: [FieldsScmGitReferences_scmGitReferencesGetInstance]? = nil, include: [Include_scmGitReferencesGetInstance]? = nil) async throws -> ScmGitReferenceResponse {
        return try await scmGitReferencesGetInstanceWithRequestBuilder(id: id, fieldsScmGitReferences: fieldsScmGitReferences, include: include).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: ScmGitReferenceResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func scmGitReferencesGetInstance(urlString: String) async throws -> ScmGitReferenceResponse {
        return try await scmGitReferencesGetInstanceWithRequestBuilder(urlString: urlString).execute().body
    }

    /**
     - GET /v1/scmGitReferences/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsScmGitReferences: (query) the fields to include for returned resources of type scmGitReferences (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - returns: RequestBuilder<ScmGitReferenceResponse> 
     */
    open class func scmGitReferencesGetInstanceWithRequestBuilder(id: String, fieldsScmGitReferences: [FieldsScmGitReferences_scmGitReferencesGetInstance]? = nil, include: [Include_scmGitReferencesGetInstance]? = nil) -> RequestBuilder<ScmGitReferenceResponse> {
        var localVariablePath = "/v1/scmGitReferences/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[scmGitReferences]": (wrappedValue: fieldsScmGitReferences?.encodeToJSON(), isExplode: false),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ScmGitReferenceResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     - GET /v1/scmGitReferences/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<ScmGitReferenceResponse> 
     */
    open class func scmGitReferencesGetInstanceWithRequestBuilder(urlString: String) -> RequestBuilder<ScmGitReferenceResponse> {
        let localVariableRequestBuilder: RequestBuilder<ScmGitReferenceResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()
        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: [:], headers: nil, requiresAuthentication: true)
    }
}
