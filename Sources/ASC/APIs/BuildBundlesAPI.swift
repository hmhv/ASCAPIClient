//
// BuildBundlesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BuildBundlesAPI {

    /**
     * enum for parameter fieldsAppClipDomainStatuses
     */
    public enum FieldsAppClipDomainStatuses_buildBundlesAppClipDomainCacheStatusGetToOneRelated: String, CaseIterable {
        case domains = "domains"
        case lastupdateddate = "lastUpdatedDate"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppClipDomainStatuses: (query) the fields to include for returned resources of type appClipDomainStatuses (optional)
     - returns: AppClipDomainStatusResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesAppClipDomainCacheStatusGetToOneRelated(id: String, fieldsAppClipDomainStatuses: [FieldsAppClipDomainStatuses_buildBundlesAppClipDomainCacheStatusGetToOneRelated]? = nil) async throws -> AppClipDomainStatusResponse {
        return try await buildBundlesAppClipDomainCacheStatusGetToOneRelatedWithRequestBuilder(id: id, fieldsAppClipDomainStatuses: fieldsAppClipDomainStatuses).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: AppClipDomainStatusResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesAppClipDomainCacheStatusGetToOneRelated(urlString: String) async throws -> AppClipDomainStatusResponse {
        return try await buildBundlesAppClipDomainCacheStatusGetToOneRelatedWithRequestBuilder(urlString: urlString).execute().body
    }

    /**
     - GET /v1/buildBundles/{id}/appClipDomainCacheStatus
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppClipDomainStatuses: (query) the fields to include for returned resources of type appClipDomainStatuses (optional)
     - returns: RequestBuilder<AppClipDomainStatusResponse> 
     */
    open class func buildBundlesAppClipDomainCacheStatusGetToOneRelatedWithRequestBuilder(id: String, fieldsAppClipDomainStatuses: [FieldsAppClipDomainStatuses_buildBundlesAppClipDomainCacheStatusGetToOneRelated]? = nil) -> RequestBuilder<AppClipDomainStatusResponse> {
        var localVariablePath = "/v1/buildBundles/{id}/appClipDomainCacheStatus"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[appClipDomainStatuses]": (wrappedValue: fieldsAppClipDomainStatuses?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppClipDomainStatusResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     - GET /v1/buildBundles/{id}/appClipDomainCacheStatus
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<AppClipDomainStatusResponse> 
     */
    open class func buildBundlesAppClipDomainCacheStatusGetToOneRelatedWithRequestBuilder(urlString: String) -> RequestBuilder<AppClipDomainStatusResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppClipDomainStatusResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsAppClipDomainStatuses
     */
    public enum FieldsAppClipDomainStatuses_buildBundlesAppClipDomainDebugStatusGetToOneRelated: String, CaseIterable {
        case domains = "domains"
        case lastupdateddate = "lastUpdatedDate"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppClipDomainStatuses: (query) the fields to include for returned resources of type appClipDomainStatuses (optional)
     - returns: AppClipDomainStatusResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesAppClipDomainDebugStatusGetToOneRelated(id: String, fieldsAppClipDomainStatuses: [FieldsAppClipDomainStatuses_buildBundlesAppClipDomainDebugStatusGetToOneRelated]? = nil) async throws -> AppClipDomainStatusResponse {
        return try await buildBundlesAppClipDomainDebugStatusGetToOneRelatedWithRequestBuilder(id: id, fieldsAppClipDomainStatuses: fieldsAppClipDomainStatuses).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: AppClipDomainStatusResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesAppClipDomainDebugStatusGetToOneRelated(urlString: String) async throws -> AppClipDomainStatusResponse {
        return try await buildBundlesAppClipDomainDebugStatusGetToOneRelatedWithRequestBuilder(urlString: urlString).execute().body
    }

    /**
     - GET /v1/buildBundles/{id}/appClipDomainDebugStatus
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppClipDomainStatuses: (query) the fields to include for returned resources of type appClipDomainStatuses (optional)
     - returns: RequestBuilder<AppClipDomainStatusResponse> 
     */
    open class func buildBundlesAppClipDomainDebugStatusGetToOneRelatedWithRequestBuilder(id: String, fieldsAppClipDomainStatuses: [FieldsAppClipDomainStatuses_buildBundlesAppClipDomainDebugStatusGetToOneRelated]? = nil) -> RequestBuilder<AppClipDomainStatusResponse> {
        var localVariablePath = "/v1/buildBundles/{id}/appClipDomainDebugStatus"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[appClipDomainStatuses]": (wrappedValue: fieldsAppClipDomainStatuses?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppClipDomainStatusResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     - GET /v1/buildBundles/{id}/appClipDomainDebugStatus
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<AppClipDomainStatusResponse> 
     */
    open class func buildBundlesAppClipDomainDebugStatusGetToOneRelatedWithRequestBuilder(urlString: String) -> RequestBuilder<AppClipDomainStatusResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppClipDomainStatusResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsBetaAppClipInvocations
     */
    public enum FieldsBetaAppClipInvocations_buildBundlesBetaAppClipInvocationsGetToManyRelated: String, CaseIterable {
        case betaappclipinvocationlocalizations = "betaAppClipInvocationLocalizations"
        case buildbundle = "buildBundle"
        case url = "url"
    }

    /**
     * enum for parameter fieldsBetaAppClipInvocationLocalizations
     */
    public enum FieldsBetaAppClipInvocationLocalizations_buildBundlesBetaAppClipInvocationsGetToManyRelated: String, CaseIterable {
        case betaappclipinvocation = "betaAppClipInvocation"
        case locale = "locale"
        case title = "title"
    }

    /**
     * enum for parameter include
     */
    public enum Include_buildBundlesBetaAppClipInvocationsGetToManyRelated: String, CaseIterable {
        case betaappclipinvocationlocalizations = "betaAppClipInvocationLocalizations"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsBetaAppClipInvocations: (query) the fields to include for returned resources of type betaAppClipInvocations (optional)
     - parameter fieldsBetaAppClipInvocationLocalizations: (query) the fields to include for returned resources of type betaAppClipInvocationLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitBetaAppClipInvocationLocalizations: (query) maximum number of related betaAppClipInvocationLocalizations returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - returns: BetaAppClipInvocationsResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesBetaAppClipInvocationsGetToManyRelated(id: String, fieldsBetaAppClipInvocations: [FieldsBetaAppClipInvocations_buildBundlesBetaAppClipInvocationsGetToManyRelated]? = nil, fieldsBetaAppClipInvocationLocalizations: [FieldsBetaAppClipInvocationLocalizations_buildBundlesBetaAppClipInvocationsGetToManyRelated]? = nil, limit: Int? = nil, limitBetaAppClipInvocationLocalizations: Int? = nil, include: [Include_buildBundlesBetaAppClipInvocationsGetToManyRelated]? = nil) async throws -> BetaAppClipInvocationsResponse {
        return try await buildBundlesBetaAppClipInvocationsGetToManyRelatedWithRequestBuilder(id: id, fieldsBetaAppClipInvocations: fieldsBetaAppClipInvocations, fieldsBetaAppClipInvocationLocalizations: fieldsBetaAppClipInvocationLocalizations, limit: limit, limitBetaAppClipInvocationLocalizations: limitBetaAppClipInvocationLocalizations, include: include).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: BetaAppClipInvocationsResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesBetaAppClipInvocationsGetToManyRelated(urlString: String) async throws -> BetaAppClipInvocationsResponse {
        return try await buildBundlesBetaAppClipInvocationsGetToManyRelatedWithRequestBuilder(urlString: urlString).execute().body
    }

    /**
     - GET /v1/buildBundles/{id}/betaAppClipInvocations
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsBetaAppClipInvocations: (query) the fields to include for returned resources of type betaAppClipInvocations (optional)
     - parameter fieldsBetaAppClipInvocationLocalizations: (query) the fields to include for returned resources of type betaAppClipInvocationLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitBetaAppClipInvocationLocalizations: (query) maximum number of related betaAppClipInvocationLocalizations returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - returns: RequestBuilder<BetaAppClipInvocationsResponse> 
     */
    open class func buildBundlesBetaAppClipInvocationsGetToManyRelatedWithRequestBuilder(id: String, fieldsBetaAppClipInvocations: [FieldsBetaAppClipInvocations_buildBundlesBetaAppClipInvocationsGetToManyRelated]? = nil, fieldsBetaAppClipInvocationLocalizations: [FieldsBetaAppClipInvocationLocalizations_buildBundlesBetaAppClipInvocationsGetToManyRelated]? = nil, limit: Int? = nil, limitBetaAppClipInvocationLocalizations: Int? = nil, include: [Include_buildBundlesBetaAppClipInvocationsGetToManyRelated]? = nil) -> RequestBuilder<BetaAppClipInvocationsResponse> {
        var localVariablePath = "/v1/buildBundles/{id}/betaAppClipInvocations"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[betaAppClipInvocations]": (wrappedValue: fieldsBetaAppClipInvocations?.encodeToJSON(), isExplode: false),
            "fields[betaAppClipInvocationLocalizations]": (wrappedValue: fieldsBetaAppClipInvocationLocalizations?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "limit[betaAppClipInvocationLocalizations]": (wrappedValue: limitBetaAppClipInvocationLocalizations?.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BetaAppClipInvocationsResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     - GET /v1/buildBundles/{id}/betaAppClipInvocations
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<BetaAppClipInvocationsResponse> 
     */
    open class func buildBundlesBetaAppClipInvocationsGetToManyRelatedWithRequestBuilder(urlString: String) -> RequestBuilder<BetaAppClipInvocationsResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BetaAppClipInvocationsResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsBuildBundleFileSizes
     */
    public enum FieldsBuildBundleFileSizes_buildBundlesBuildBundleFileSizesGetToManyRelated: String, CaseIterable {
        case devicemodel = "deviceModel"
        case downloadbytes = "downloadBytes"
        case installbytes = "installBytes"
        case osversion = "osVersion"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsBuildBundleFileSizes: (query) the fields to include for returned resources of type buildBundleFileSizes (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - returns: BuildBundleFileSizesResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesBuildBundleFileSizesGetToManyRelated(id: String, fieldsBuildBundleFileSizes: [FieldsBuildBundleFileSizes_buildBundlesBuildBundleFileSizesGetToManyRelated]? = nil, limit: Int? = nil) async throws -> BuildBundleFileSizesResponse {
        return try await buildBundlesBuildBundleFileSizesGetToManyRelatedWithRequestBuilder(id: id, fieldsBuildBundleFileSizes: fieldsBuildBundleFileSizes, limit: limit).execute().body
    }

    /**
     - parameter urlString: next or first url from App Store Connect API
     - returns: BuildBundleFileSizesResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func buildBundlesBuildBundleFileSizesGetToManyRelated(urlString: String) async throws -> BuildBundleFileSizesResponse {
        return try await buildBundlesBuildBundleFileSizesGetToManyRelatedWithRequestBuilder(urlString: urlString).execute().body
    }

    /**
     - GET /v1/buildBundles/{id}/buildBundleFileSizes
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsBuildBundleFileSizes: (query) the fields to include for returned resources of type buildBundleFileSizes (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - returns: RequestBuilder<BuildBundleFileSizesResponse> 
     */
    open class func buildBundlesBuildBundleFileSizesGetToManyRelatedWithRequestBuilder(id: String, fieldsBuildBundleFileSizes: [FieldsBuildBundleFileSizes_buildBundlesBuildBundleFileSizesGetToManyRelated]? = nil, limit: Int? = nil) -> RequestBuilder<BuildBundleFileSizesResponse> {
        var localVariablePath = "/v1/buildBundles/{id}/buildBundleFileSizes"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = ASCAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[buildBundleFileSizes]": (wrappedValue: fieldsBuildBundleFileSizes?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BuildBundleFileSizesResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     - GET /v1/buildBundles/{id}/buildBundleFileSizes
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter urlString: next or first url from App Store Connect API
     - returns: RequestBuilder<BuildBundleFileSizesResponse> 
     */
    open class func buildBundlesBuildBundleFileSizesGetToManyRelatedWithRequestBuilder(urlString: String) -> RequestBuilder<BuildBundleFileSizesResponse> {
        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BuildBundleFileSizesResponse>.Type = ASCAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: urlString, parameters: nil, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
